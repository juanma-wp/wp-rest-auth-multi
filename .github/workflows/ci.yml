name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          # Minimum supported PHP version
          - php-version: '7.4'
            node-version: 18
          # Current stable PHP version  
          - php-version: '8.1'
            node-version: 20
          # Latest PHP version
          - php-version: '8.2'
            node-version: 20

    name: PHP ${{ matrix.php-version }} - Node ${{ matrix.node-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, json
          tools: composer
          coverage: xdebug

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          # GitHub Actions runners have Docker but not docker-compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Composer dependencies
        run: |
          # Try to install with existing lock file first
          if ! composer install --prefer-dist --no-progress --optimize-autoloader; then
            echo "Lock file incompatible, updating dependencies..."
            composer update --prefer-dist --no-progress --optimize-autoloader
          fi

# WordPress version is always 'latest' now, so no version setup needed

      - name: Start WordPress environment
        run: |
          # Set environment variables to help with container builds
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          
          # Retry wp-env start in case of network issues
          for i in {1..3}; do
            echo "Attempt $i to start wp-env..."
            if npm run env:start; then
              echo "wp-env started successfully"
              break
            else
              echo "Attempt $i failed, cleaning up and retrying..."
              npm run env:destroy || true
              if [ $i -eq 3 ]; then
                echo "Failed to start wp-env after 3 attempts"
                exit 1
              fi
              sleep 10
            fi
          done

      - name: Wait for WordPress to be ready
        run: |
          echo "Waiting for WordPress to be ready..."
          timeout 300 bash -c 'until curl -s http://localhost:8888 > /dev/null; do echo "Waiting..."; sleep 5; done'
          echo "WordPress is ready!"

      - name: Run PHP unit tests
        run: npm run test:unit

      - name: Run PHP integration tests
        run: npm run test:integration

      - name: Generate coverage report
        if: matrix.php-version == '8.1'
        run: |
          if npm run test:coverage 2>/dev/null; then
            echo "Coverage report generated successfully"
          else
            echo "Coverage generation not available, skipping"
          fi

      - name: Upload coverage reports to Codecov
        if: matrix.php-version == '8.1'
        uses: codecov/codecov-action@v3
        with:
          file: ./tests/coverage/clover.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Show wp-env logs on failure
        if: failure()
        run: npm run env:logs

      - name: Archive test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-php-${{ matrix.php-version }}-node-${{ matrix.node-version }}
          path: |
            tests/coverage/
            .wp-env/
          retention-days: 7

      - name: Stop WordPress environment
        if: always()
        run: npm run env:stop

  lint:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer, cs2pr

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: Add Composer bin to PATH
        run: echo "$(composer config bin-dir --absolute)" >> $GITHUB_PATH

      - name: Run PHPCS
        if: always()
        run: |
          if command -v phpcs &> /dev/null; then
            phpcs --standard=WordPress --report=checkstyle includes/ wp-rest-auth-multi.php | cs2pr
          else
            echo "PHPCS not available, skipping code style check"
          fi

      - name: Run PHPStan (if available)
        if: always()
        run: |
          if command -v phpstan &> /dev/null; then
            phpstan analyse includes/ wp-rest-auth-multi.php --level=5
          else
            echo "PHPStan not available, skipping static analysis"
          fi

  security:
    runs-on: ubuntu-latest
    name: Security Scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: Run security scan
        run: |
          if [ -f "composer.json" ]; then
            composer audit
          fi

      - name: Check for known vulnerabilities
        uses: symfonycorp/security-checker-action@v5